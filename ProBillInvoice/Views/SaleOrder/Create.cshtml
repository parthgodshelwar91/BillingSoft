@model ProBillInvoice.Models.SaleOrderModel

@{
    ViewBag.Title = "Create";
    int SrNo = 0;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-sm-12">
                <div class="card" style="margin:0;">
                    <div class="card-header" style="border:0;">
                        <div class="row">
                            <div class="col-sm-5">
                                <h4 class="card-title mb-0 page-heading-color">Sale Order - Create</h4>
                            </div>
                            <div class="col-sm-6">
                                @Html.Label("Order No", new { @class = "", @style = "float: left; width: 90px; background-color: #e4ebf7; margin: 0;padding: 0px 10px; text-align: right;font-size: 15px; " })
                                @Html.EditorFor(model => model.SaleOrderHeaderSearch.order_no, new { htmlAttributes = new { @class = "", @style = "font-weight: bold; color: #fff; border:none; padding: 0px 10px; text-align: left; float: left; width: 100px; background-color: #2c62b9;", @readonly = true, placeholder = "Enter Order No" } })
                                @Html.ValidationMessageFor(model => model.SaleOrderHeaderSearch.order_no, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="search-panel-custom pb-0">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("Customer Name", new { @class = "col-form-label pt-0 pb-0" })
                                @Html.Label("*", htmlAttributes: new { @class = "col-form-label pt-0 pb-0", style = "color: red;" })
                                @Html.DropDownListFor(model => model.SaleOrderHeaderSearch.party_id, new SelectList(ViewBag.PartyList, "Value", "Text"), "-- Select--", new { @class = "form-select", @style = "float: left; width: 100%;" })
                                @Html.ValidationMessageFor(model => model.SaleOrderHeaderSearch.party_id, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Site Location", new { @class = "col-form-label pt-0 pb-0", @style = "" })
                                @Html.DropDownListFor(model => model.SaleOrderHeaderSearch.cust_site_location_id, new SelectList(ViewBag.CityList, "Value", "Text"), "-- Select--", new { @class = "form-select", @style = "float: left; width: 100%;" })
                                @Html.ValidationMessageFor(model => model.SaleOrderHeaderSearch.cust_site_location_id, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                <div style="margin:35px 0 0 0;">
                                    @Html.Label("*", htmlAttributes: new { id = "lblPartyCode", @style = "margin: 0px; color: navy;letter-spacing: 2px;" })
                                    <br />
                                    @Html.Label("*", htmlAttributes: new { id = "lblGSTStatus", @style = "margin: 0px;color: #12566c;font - size: 14px; " })
                                </div>
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Buyer Order No", new { @class = "col-form-label pt-0 pb-0", @style = "" })
                                @Html.Label("*", htmlAttributes: new { @class = "col-form-label pt-0 pb-0", style = "color: red;" })
                                @Html.EditorFor(model => model.SaleOrderHeaderSearch.buyer_order_no, new { htmlAttributes = new { @class = "form-control", @style = "", placeholder = "Enter Buyer Order No" } })
                                @Html.ValidationMessageFor(model => model.SaleOrderHeaderSearch.buyer_order_no, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Company Name", new { @class = "col-form-label pt-0 pb-0", @style = "" })
                                @Html.DropDownListFor(model => model.SaleOrderHeaderSearch.company_id, new SelectList(ViewBag.CompanyList, "Value", "Text"), new { @class = "form-select", @style = "" })
                                @Html.ValidationMessageFor(model => model.SaleOrderHeaderSearch.company_id, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Order Date", new { @class = "col-form-label pt-0 pb-0", @style = "" })
                                @Html.EditorFor(model => model.SaleOrderHeaderSearch.order_date, new { htmlAttributes = new { @type = "Date", @class = "form-control", @style = "" } })
                                @Html.ValidationMessageFor(model => model.SaleOrderHeaderSearch.order_date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group">

                            <div class="row mb-2">
                                <div class="col-sm-12 table-responsive" style="height: 300px;">
                                    <table id="SaleOrderDetail" class="table table-bordered table-hover table-responsive table-striped align-middle table-rmc table-sm" style="width:100%">
                                        @*class="table table-bordered table-hover dt-responsive nowrap table-striped align-middle app-tbl-one"*@
                                        <thead>
                                            <tr>
                                                <th>Material</th>
                                                <th>Unit</th>
                                                <th style="text-align: right;">Order Qty</th>
                                                <th style="text-align: right;">GST Inc Rate</th>
                                                <th style="text-align: right;">Rate</th>
                                                <th style="text-align: right;">Sub Total</th>
                                                <th style="text-align: right;">CGST(%)</th>
                                                <th style="text-align: right;">SGST(%)</th>
                                                <th style="text-align: right;">IGST(%)</th>
                                                <th style="text-align: right;">GST Amt</th>
                                                <th style="text-align: right;"><i class="bx bx-rupee"></i>Amount</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>

                                        @if (Model.SaleOrderDetail != null)
                                        {
                                            for (var i = 0; i < Model.SaleOrderDetail.Count(); i++)
                                            {
                                                SrNo = SrNo + 1;
                                        <tr>
                                            <td style="width: 150px;">@Html.DropDownListFor(x => Model.SaleOrderDetail[i].material_id, new SelectList(ViewBag.MaterialList, "Value", "Text", Model.SaleOrderDetail[i].material_id), "--Select--", new { @class = "form-select", @onchange = "UnitList(" + i + ");" })</td>
                                            <td style="width: 150px;">@Html.DropDownListFor(x => Model.SaleOrderDetail[i].unit_code, new SelectList(ViewBag.UnitList, "Value", "Text", Model.SaleOrderDetail[i].unit_code), "--Select--", new { @class = "form-select", @onchange = "UnitList(" + i + ");" })</td>
                                            <td style="width: 150px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].order_qty, new { @class = "form-control", @style = "text-align: right; width: 100%; float: right; color: #653eaa;", @onchange = "calculation();" })</td>
                                            <td style="width: 150px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].final_item_rate, new { @class = "form-control", @style = "text-align: right; width: 100%;", @onchange = "calculation();" })</td>
                                            <td style="width: 150px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].item_rate, new { @class = "form-control", @style = "text-align: right; width: 100%; float: right; color: green;", @onchange = "calculation();", @readonly = "readonly" })</td>
                                            <td style="width: 150px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].sub_total, new { @style = "text-align: right; border: none; width: 100%; float: right; background-color: transparent; color: green;", @readonly = "readonly" })</td>
                                            <td style="width: 80px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].cgst, new { @class = "form-control", @style = "text-align: right; width: 100%;", @onchange = "calculation();" })</td>
                                            <td style="width: 80px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].sgst, new { @class = "form-control", @style = "text-align: right; width: 100%;", @onchange = "calculation();" })</td>
                                            <td style="width: 80px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].igst, new { @class = "form-control", @style = "text-align: right; width: 100%;", @onchange = "calculation();" })</td>

                                            <td style="width: 150px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].totalgst, new { @style = "text-align: right; border: none; width: 100%; float: right; background-color: transparent; color: green;", @readonly = "readonly" })</td>
                                            <td style="width: 200px;">@Html.TextBoxFor(x => Model.SaleOrderDetail[i].item_value, new { @style = "text-align: right; border: none; width: 100%; float: right; background-color: transparent; color: green;", @readonly = "readonly" })</td>

                                            @Html.HiddenFor(x => Model.SaleOrderDetail[i].order_detail_id)
                                            @Html.HiddenFor(x => Model.SaleOrderDetail[i].order_id)
                                            @Html.HiddenFor(x => Model.SaleOrderDetail[i].total_iss_qty)
                                            @Html.HiddenFor(x => Model.SaleOrderDetail[i].is_pending)
                                            <td style="text-align: center;">
                                                <button type="submit" id="btndeleteSO" class="btn btn-danger btn-sm custom-toggle" name="btndeleteSO" value="@(i)" formaction='@Url.Action("Create", "SaleOrder")'><i class="ri-close-line"></i></button>
                                            </td>
                                        </tr>
                                            }
                                        }
                                    </table>
                                </div>
                                <div class="col-md-6">
                                    <button type="submit" id="btnAdd" class="btn btn-primary" name="btnAdd" value="Add" onclick="javascript: return RowValidation();"><div style="float: left; padding: 0 5px 0 0;"><i class="bx bx-plus"></i></div>Add</button>
                                </div>
                            </div>

                            <div class="total-value-strip">
                                <div class="row">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-4">
                                        <div style="float:right">
                                            <span style=" float:left; padding: 0px 10px 0px 10px;"><strong>Total Qty:</strong></span>
                                            <span style="padding: 0px 0px 0px 0px; color:green"><i class="bx bx-rupee myrupee-icon-black"></i></span>
                                            <span>@Html.TextBoxFor(model => model.SaleOrderHeaderSearch.order_qty, new { @style = "text-align:left; color: green;  font-weight:bold; border: none; width: 80px;", @readonly = true })</span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div style="float:right">
                                            <span style="float:left; padding: 0px 10px 0px 10px;"><strong>Total:</strong></span>
                                            <span style="padding: 0px 0px 0px 0px; color:green"><i class="bx bx-rupee myrupee-icon-black"></i></span>
                                            <span>@Html.TextBoxFor(model => model.SaleOrderHeaderSearch.total_amount, new { @style = "color: green; font-weight:bold; border: none; width: 100px;", @readonly = true })</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="bottom-save-cancel-btn">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <a href="@Url.Action("Create", "SaleOrder" )" class="refresh-btn"><i class="bx bx-rotate-right"></i>Refresh</a>
                                        <a href="@Url.Action("Index", "SaleOrder")" class="back-btn"><i class="las la-arrow-circle-left"></i>Back</a>
                                        <button type="submit" id="btnAdd" class="save-data-btn" name="btnAdd" value="Save" onclick="return Validation();"><i class="ri-save-line"></i>Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (ViewBag.Message != null)
{
    <script>
        window.onload = function () {
            Swal.fire({
                title: "<span style='color: #3085d6;'>@Html.Raw(ViewBag.Message)</span>",
                icon: "success",
                iconColor:"#04AA6D",
                confirmButtonClass: "w-xs me-2 mt-2",
                confirmButtonColor: "#3085d6",

            }).then((result) => {
                if (result.value) {
                    window.location.href = "@Url.Action("Create", "SaleOrder")";
                }
            });
                                    } ;
    </script>
}

@if (TempData["ErrorMsg"] != null)
{
    <script>
        window.onload = function () {
                Swal.fire({
                text: "@TempData["ErrorMsg"]",
                icon: "error",
                confirmButtonClass: "btn btn-primary w-xs me-2 mt-2",
            })
        };
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@*------------------------nikita calculation-----------------------*@
    @*<script>
        $(document).ready(function () {
            var i = 0;
            var TotalQty = 0.00;
            var TotalAmount = 0.00;
            $("#SaleOrderDetail tr").each(function () {
                var cgstTotal = 0.00;
                var sgstTotal = 0.00;
                var IgstTotal = 0.00;
                var cgstRate = 0.00;
                var sgstRate = 0.00;
                var IgstRate = 0.00;
                var qty = $("#SaleOrderDetail_" + i.toString() + "__order_qty").val();
                var rate = $("#SaleOrderDetail_" + i.toString() + "__item_rate").val();
                var cgst = $("#SaleOrderDetail_" + i.toString() + "__cgst").val();
                var sgst = $("#SaleOrderDetail_" + i.toString() + "__sgst").val();
                var Igst = $("#SaleOrderDetail_" + i.toString() + "__igst ").val();

                var SubTotal = qty * rate;
                if (!isNaN(qty)) {
                    TotalQty += parseFloat(qty);
                }
                if (cgst != 0) {
                    var cgstTotal = SubTotal * (cgst / 100);
                    cgstRate = rate * (cgst / 100);
                }
                if (sgst != 0) {
                    sgstTotal = SubTotal * (sgst / 100);
                    sgstRate = rate * (sgst / 100);
                }
                if (Igst != 0) {
                    IgstTotal = SubTotal * (Igst / 100);
                    IgstRate = rate * (Igst / 100);
                }
                var ItemValue = SubTotal + cgstTotal + sgstTotal + IgstTotal;
                var GstRate = parseFloat(rate) + parseFloat(cgstRate) + parseFloat(sgstRate) + parseFloat(IgstRate);
                var TotalGST = ItemValue - SubTotal;
                if (!isNaN(ItemValue)) {
                    TotalAmount += ItemValue;
                }
                $("#SaleOrderDetail_" + i.toString() + "__sub_total").val(SubTotal.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__final_item_rate").val(GstRate.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__totalgst").val(TotalGST.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__item_value").val(ItemValue.toFixed(2));
                i++;
            });
            var RowCount = i - 1;
            $("#SaleOrderHeaderSearch_order_qty").val(TotalQty.toFixed(2));
            $("#SaleOrderHeaderSearch_total_amount").val(Math.round(TotalAmount).toFixed(2));
        })
    </script>*@


    @*<script>
            function calculation() {

                var i = 0;
                var TotalQty = 0.00;
                var TotalAmount = 0.00;
                $("#SaleOrderDetail tr").each(function () {

                    var cgstTotal = 0.00;
                    var sgstTotal = 0.00;
                    var IgstTotal = 0.00;
                    var cgstRate = 0.00;
                    var sgstRate = 0.00;
                    var IgstRate = 0.00;
                    var qty = $("#SaleOrderDetail_" + i.toString() + "__order_qty").val();
                    var rate = $("#SaleOrderDetail_" + i.toString() + "__item_rate").val();
                    var cgst = $("#SaleOrderDetail_" + i.toString() + "__cgst").val();
                    var sgst = $("#SaleOrderDetail_" + i.toString() + "__sgst").val();
                    var Igst = $("#SaleOrderDetail_" + i.toString() + "__igst ").val();

                    var SubTotal = qty * rate;
                    if (!isNaN(qty)) {
                        TotalQty += parseFloat(qty);
                    }
                    if (cgst != 0) {
                        var cgstTotal = SubTotal * (cgst / 100);
                        cgstRate = rate * (cgst / 100);
                    }
                    if (sgst != 0) {
                        sgstTotal = SubTotal * (sgst / 100);
                        sgstRate = rate * (sgst / 100);
                    }
                    if (Igst != 0) {
                        IgstTotal = SubTotal * (Igst / 100);
                        IgstRate = rate * (Igst / 100);
                    }

                    var ItemValue = SubTotal + cgstTotal + sgstTotal + IgstTotal;
                    var GstRate = parseFloat(rate) + parseFloat(cgstRate) + parseFloat(sgstRate) + parseFloat(IgstRate);
                    var TotalGST = ItemValue - SubTotal;
                    if (!isNaN(ItemValue)) {
                        TotalAmount += ItemValue;
                    }
                    $("#SaleOrderDetail_" + i.toString() + "__sub_total").val(SubTotal.toFixed(2));
                    $("#SaleOrderDetail_" + i.toString() + "__final_item_rate").val(GstRate.toFixed(2));
                    $("#SaleOrderDetail_" + i.toString() + "__totalgst").val(TotalGST.toFixed(2));
                    $("#SaleOrderDetail_" + i.toString() + "__item_value").val(ItemValue.toFixed(2));
                    i++;
                });
                var RowCount = i - 1;
                $("#SaleOrderHeaderSearch_order_qty").val(TotalQty.toFixed(2));
                $("#SaleOrderHeaderSearch_total_amount").val(Math.round(TotalAmount).toFixed(2));
            }
        </script>*@

    @*--------------------------------------------------------------------------------------------------------------------*@
    <script>
        $(document).ready(function () {
            var i = 0;
            var TotalQty = 0.00;
            var TotalAmount = 0.00;
            $("#SaleOrderDetail tr").each(function () {
              
                var cgstTotal = 0.00;
                var sgstTotal = 0.00;
                var IgstTotal = 0.00;                
                var TotalGST = 0.00;
                var GstIncRate = 0.00;
                var Rate = 0.00;

                var qty = $("#SaleOrderDetail_" + i.toString() + "__order_qty").val();               
                var cgst = $("#SaleOrderDetail_" + i.toString() + "__cgst").val();
                var sgst = $("#SaleOrderDetail_" + i.toString() + "__sgst").val();
                var Igst = $("#SaleOrderDetail_" + i.toString() + "__igst ").val();
                var GstInc = $("#SaleOrderDetail_" + i.toString() + "__final_item_rate").val();
                if (cgst != 0 && sgst != 0) {
                    Rate = GstInc - (parseFloat(cgst) + parseFloat(sgst));

                    // GstIncRate = parseFloat(Rate) + (parseFloat(Rate) * ((parseFloat(cgst) + parseFloat(sgst)) / 100));
                }
                else {
                    Rate = GstInc - (parseFloat(cgst) + parseFloat(sgst) + parseFloat(Igst));
                    //GstIncRate = parseFloat(Rate) + (parseFloat(Rate) * ((parseFloat(Igst)) / 100));
                }

                var SubTotal = qty * Rate;
                if (!isNaN(qty)) {
                    TotalQty += parseFloat(qty);
                }
                if (cgst != 0) {
                    cgstTotal = SubTotal * (cgst / 100);
                    cgstRate = Rate * (cgst / 100);
                }
                if (sgst != 0) {
                    sgstTotal = SubTotal * (sgst / 100);
                    sgstRate = Rate * (sgst / 100);
                }
                if (Igst != 0) {
                    IgstTotal = SubTotal * (Igst / 100);
                    IgstRate = Rate * (Igst / 100);
                }
               
                if (cgst != 0 && sgst != 0) {                    
                    GstIncRate = parseFloat(Rate) + (parseFloat(Rate) * ((parseFloat(cgst) + parseFloat(sgst)) / 100));
                }
                else {                  
                    GstIncRate = parseFloat(Rate) + (parseFloat(Rate) * ((parseFloat(Igst)) / 100));
                }

                if (cgst != 0 && sgst != 0) {
                    TotalGST = (parseFloat(cgst) + parseFloat(sgst)) / 100 * SubTotal;
                }
                else {
                    TotalGST = (parseFloat(cgst) + parseFloat(sgst) + parseFloat(Igst)) / 100 * SubTotal;
                }
                var ItemValue = SubTotal + TotalGST;
                if (!isNaN(ItemValue)) {
                    TotalAmount += ItemValue;
                }
                $("#SaleOrderDetail_" + i.toString() + "__item_rate").val(Rate.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__sub_total").val(SubTotal.toFixed(2));
                //$("#SaleOrderDetail_" + i.toString() + "__final_item_rate").val(GstIncRate.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__totalgst").val(TotalGST.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__item_value").val(ItemValue.toFixed(2));
                i++;
            });
            var RowCount = i - 1;
            $("#SaleOrderHeaderSearch_order_qty").val(TotalQty.toFixed(2));
            $("#SaleOrderHeaderSearch_total_amount").val(Math.round(TotalAmount).toFixed(2));
        })
    </script>

    <script>
        function calculation() {           
            var i = 0;
            var TotalQty = 0.00;
            var TotalAmount = 0.00;
            $("#SaleOrderDetail tr").each(function () {               
                var cgstTotal = 0.00;
                var sgstTotal = 0.00;
                var IgstTotal = 0.00;
                var Rate = 0.00;
                var TotalGST = 0.00;
                var GstIncRate = 0.00;

                var qty = $("#SaleOrderDetail_" + i.toString() + "__order_qty").val();               
                var cgst = $("#SaleOrderDetail_" + i.toString() + "__cgst").val();
                var sgst = $("#SaleOrderDetail_" + i.toString() + "__sgst").val();
                var Igst = $("#SaleOrderDetail_" + i.toString() + "__igst ").val();
                var GstInc = $("#SaleOrderDetail_" + i.toString() + "__final_item_rate").val();

                if (cgst != 0 && sgst != 0) {
                    Rate = GstInc - (parseFloat(cgst) + parseFloat(sgst));
                   
                   // GstIncRate = parseFloat(Rate) + (parseFloat(Rate) * ((parseFloat(cgst) + parseFloat(sgst)) / 100));
                }
                else {
                    Rate = GstInc - (parseFloat(cgst) + parseFloat(sgst) + parseFloat(Igst));
                    //GstIncRate = parseFloat(Rate) + (parseFloat(Rate) * ((parseFloat(Igst)) / 100));
                }
                var SubTotal = qty * Rate;
                if (!isNaN(qty)) {
                    TotalQty += parseFloat(qty);
                }
                if (cgst != 0) {
                    cgstTotal = SubTotal * (cgst / 100);                    
                }
                if (sgst != 0) {
                    sgstTotal = SubTotal * (sgst / 100);                    
                }
                if (Igst != 0) {
                    IgstTotal = SubTotal * (Igst / 100);                   
                }             
               
                if (cgst != 0 && sgst != 0) {
                    TotalGST = (parseFloat(cgst) + parseFloat(sgst)) / 100 * SubTotal;
                }
                else {
                    TotalGST = (parseFloat(cgst) + parseFloat(sgst) + parseFloat(Igst)) / 100 * SubTotal;
                }
                var ItemValue = SubTotal + TotalGST;
                if (!isNaN(ItemValue)) {
                    TotalAmount += ItemValue;
                }
                $("#SaleOrderDetail_" + i.toString() + "__item_rate").val(Rate.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__sub_total").val(SubTotal.toFixed(2));
                //$("#SaleOrderDetail_" + i.toString() + "__final_item_rate").val(GstIncRate.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__totalgst").val(TotalGST.toFixed(2));
                $("#SaleOrderDetail_" + i.toString() + "__item_value").val(ItemValue.toFixed(2));
                i++;
            });
            var RowCount = i - 1;
            $("#SaleOrderHeaderSearch_order_qty").val(TotalQty.toFixed(2));
            $("#SaleOrderHeaderSearch_total_amount").val(Math.round(TotalAmount).toFixed(2));
        }
    </script>

    <script type="text/javascript">
        function Validation() {
            if (@SrNo == 0) {
                document.getElementById('lblrowcount').innerHTML = "Total can't be less than or equal to 0!";
                document.getElementById('lblrowcount').style.display = "block";
                return false;
            }
            else {
                return true;
            }
        }
    </script>

    <script>
        function RowValidation() {
            var rowCount = $("#SaleOrderDetail tr").length;
            var i = 0;
            var foundDuplicate = false;

            if (rowCount > 2) {
                $("#SaleOrderDetail tr").each(function () {
                    var currentValue = $("#SaleOrderDetail_" + i + "__material_id").val();

                    var j = 0;
                    $("#SaleOrderDetail tr").each(function () {
                        if (i != j && foundDuplicate == false) {
                            var NewValue = $("#SaleOrderDetail_" + j + "__material_id").val();
                            if (NewValue == currentValue) {
                                alert("Duplicate Material Name found!");
                                foundDuplicate = true;
                                return false;
                            }
                        }
                        j++;
                    })
                    i++;
                });
            }
            else {
                foundDuplicate = false;
            }
            return !foundDuplicate;
        }
    </script>

    <script>
        function UnitList(val) {      
            //var selectedValue;
            $("#SaleOrderDetail tr").each(function () {              
                var selectedText = $("#SaleOrderDetail_" + val.toString() + "__material_id").find("option:selected").text();
                var selectedValue = $("#SaleOrderDetail_" + val.toString() + "__material_id").val();
                var lsPartyId = $("#SaleOrderHeaderSearch_party_id").val();
                var lsPartyName = $("#SaleOrderHeaderSearch_party_id").find("option:selected").text();
                var lsCompanyId = $("#SaleOrderHeaderSearch_company_id").val();

                var Parameter = {
                    ItemCode: selectedValue,
                    ItemName: selectedText,
                    PartyId: lsPartyId,
                    PartyName: lsPartyName,
                    CompanyId: lsCompanyId
                };
                $.ajax({
                    type: "POST",
                    url: "/SaleOrder/FillByUnitCode",
                    data: JSON.stringify(Parameter),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {                    
                        data.List;
                        var items = ' ';
                        $.each(data.List, function (i, SGrCode) {
                            items += "<option value='" + SGrCode.Value + "'>" + SGrCode.Text + "</option>";
                        });
                        $("#SaleOrderDetail_" + val.toString() + "__unit_code").html(items);
                        $("#SaleOrderDetail_" + val.toString() + "__cgst").val(data.cgst.toFixed(2));
                        $("#SaleOrderDetail_" + val.toString() + "__sgst").val(data.sgst.toFixed(2));
                        $("#SaleOrderDetail_" + val.toString() + "__igst").val(data.igst.toFixed(2));
                    },
                    error: function () {
                        //alert("Error occured!!")
                    }
                });
            });
        }
    </script>

    <script>
        $(document).ready(function () {
            $("#material_id").change(function () {
                var selectedText = $(this).find("option:selected").text();
                var selectedValue = $(this).val();

                var SGM = {
                    id: selectedValue,
                    name: selectedText
                };
                $.ajax({
                    type: "POST",
                    url: "/SaleOrder/UnitCode",
                    data: JSON.stringify(SGM),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        var items = '';
                        $.each(data.lsUnitList, function (i, unit) {
                            items += "<option value='" + unit.Value + "'>" + unit.Text + "</option>";
                        });
                        $('#unit_code').html(items);
                    },
                    error: function () {
                        //alert("Error occured!!")
                    }
                });
            })
            $('#loading').hide();
        })
    </script>

    <script>
        function AjFunction(GSTStatus) {
            if (GSTStatus === "Within State Customer") {
                $('#SaleOrderDetail th:nth-child(7)').show();
                $('#SaleOrderDetail td:nth-child(7)').show();
                $('#SaleOrderDetail th:nth-child(8)').show();
                $('#SaleOrderDetail td:nth-child(8)').show();
                $('#SaleOrderDetail th:nth-child(9)').hide();
                $('#SaleOrderDetail td:nth-child(9)').hide();
            } else {
                $('#SaleOrderDetail th:nth-child(7)').hide();
                $('#SaleOrderDetail td:nth-child(7)').hide();
                $('#SaleOrderDetail th:nth-child(8)').hide();
                $('#SaleOrderDetail td:nth-child(8)').hide();
                $('#SaleOrderDetail th:nth-child(9)').show();
                $('#SaleOrderDetail td:nth-child(9)').show();
            }

            if (GSTStatus === "Within State Customer") {
                $('#GRNTax th:nth-child(3)').show();
                $('#GRNTax td:nth-child(3)').show();
                $('#GRNTax th:nth-child(4)').show();
                $('#GRNTax td:nth-child(4)').show();
                $('#GRNTax th:nth-child(5)').hide();
                $('#GRNTax td:nth-child(5)').hide();
            } else {
                $('#GRNTax th:nth-child(3)').hide();
                $('#GRNTax td:nth-child(3)').hide();
                $('#GRNTax th:nth-child(4)').hide();
                $('#GRNTax td:nth-child(4)').hide();
                $('#GRNTax th:nth-child(5)').show();
                $('#GRNTax td:nth-child(5)').show();
            }
        }

        $(document).ready(function () {
            $("#SaleOrderHeaderSearch_party_id").change(function () {
                var selectedText = $(this).find("option:selected").text();
                var selectedValue = $(this).val();

                var lsParameter = {
                    PartyId: selectedValue,
                    PartyName: selectedText
                };
                $.ajax({
                    type: "POST",
                    url: "/SaleOrder/PartyDetail",
                    data: JSON.stringify(lsParameter),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        PartyCode = data.msg.split("|")[0];
                        PartyAddress = data.msg.split("|")[1];
                        GSTStatus = data.msg.split("|")[2];
                        $('#lblPartyCode').text(PartyCode);
                        $('#lblPartyAddress').text(PartyAddress);
                        $('#lblGSTStatus').text(GSTStatus);
                        AjFunction(GSTStatus); // Call the AjFunction with GSTStatus
                    },
                    error: function () {
                        //alert("Error occured!!")
                    }
                });
            })
        })

        $(document).ready(function () {
            $("#SaleOrderHeaderSearch_party_id").change(function () {
                var selectedText = $(this).find("option:selected").text();
                var selectedValue = $(this).val();

                var lsParameter = {
                    PartyId: selectedValue,
                    PartyName: selectedText
                };
                $.ajax({
                    type: "POST",
                    url: "/SaleOrder/CustomerLocation",
                    data: JSON.stringify(lsParameter),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {                      
                        var items = "<option value=0>--Select--</option>";
                        $.each(data.lsCustomerList, function (i, location) {
                            items += "<option value='" + location.Value + "'>" + location.Text + "</option>";
                        });
                        $('#SaleOrderHeaderSearch_cust_site_location_id').html(items);
                    },
                    error: function () {
                        //alert("Error occured!!")
                    }
                });
            })
        })
        $(document).ready(function () {
            var selectedText = $("#SaleOrderHeaderSearch_party_id").find("option:selected").text();
            var selectedValue = $("#SaleOrderHeaderSearch_party_id").val();

            var lsParameter = {
                PartyId: selectedValue,
                PartyName: selectedText
            };
            $.ajax({
                type: "POST",
                url: "/SaleOrder/PartyDetail",
                data: JSON.stringify(lsParameter),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    PartyCode = data.msg.split("|")[0];
                    PartyAddress = data.msg.split("|")[1];
                    GSTStatus = data.msg.split("|")[2];
                    $('#lblPartyCode').text(PartyCode);
                    $('#lblPartyAddress').text(PartyAddress);
                    $('#lblGSTStatus').text(GSTStatus);
                    AjFunction(GSTStatus); // Call the AjFunction with GSTStatus
                },
                error: function () {
                    //alert("Error occured!!")
                }
            });
        })
    </script>
}


