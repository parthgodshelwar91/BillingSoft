@model ProBillInvoice.Models.RecipeMasterModel

@{
    ViewBag.Title = "Create";
    int SrNo = 0;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title mb-0 page-heading-color">Recipe Master - Create</h4>
                    </div>

                    <div class="card-body">
                        <div id="here">
                            <div class="form-group">
                                <div>
                                    @Html.HiddenFor(model => model.RecipeHeader.recipe_id)
                                    @Html.ValidationMessageFor(model => model.RecipeHeader.recipe_id, "", new { @class = "text-danger" })
                                </div>

                                <div class="row">
                                    <div class="col-md-3">
                                        @Html.LabelFor(model => model.RecipeHeader.recipe_no, htmlAttributes: new { @class = "col-form-label" })
                                        @Html.Label("*", htmlAttributes: new { style = "color: red;" })
                                    </div>
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.RecipeHeader.recipe_no, new { htmlAttributes = new { @class = "form-control", @style = "font-weight:bold; color: navy; border:none; width: 40%;", @readonly = true, placeholder = "Enter Recipe No" } })
                                        @Html.ValidationMessageFor(model => model.RecipeHeader.recipe_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-3">
                                        @Html.LabelFor(model => model.RecipeHeader.recipe_name, htmlAttributes: new { @class = "col-form-label" })
                                    </div>
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.RecipeHeader.recipe_name, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%;", placeholder = "Enter Recipe Name" } })
                                        @Html.ValidationMessageFor(model => model.RecipeHeader.recipe_name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-3">
                                        @Html.Label("Customer Name", htmlAttributes: new { @class = "col-form-label" })
                                    </div>
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(Model => Model.RecipeHeader.party_id, (SelectList)ViewBag.CustomerList, "-- Select--", new { @class = "form-select", @style = "width: 100%;" })
                                        @Html.ValidationMessageFor(model => model.RecipeHeader.party_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="table-responsive">
                                            <table id="RecipeDetails" class="table table-striped table-bordered align-middle table-nowrap app-tbl-one">
                                                <thead>
                                                    <tr>
                                                        <th style="text-align:center">Sr No</th>
                                                        <th>Material</th>
                                                        <th>Recipe Name</th>
                                                        <th>Quantity</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>

                                                @if (Model.RecipeDetails != null)
                                                {
                                                    for (var i = 0; i < Model.RecipeDetails.Count(); i++)
                                                    {
                                                        SrNo = SrNo + 1;
                                                        <tr>
                                                            <td style="text-align:center">@SrNo</td>
                                                            <td>@Html.DropDownListFor(x => Model.RecipeDetails[i].material_id, new SelectList(ViewBag.MaterialList, "Value", "Text", Model.RecipeDetails[i].material_id), "--Select--", new { @class = "form-select", @onchange = "RecipeName(" + i + ");" })</td>
                                                            <td>@Html.TextBoxFor(x => Model.RecipeDetails[i].material_recipe_name, new { @class = "form-control", @style = "width: 100%;" })</td>
                                                            <td>@Html.TextBoxFor(x => Model.RecipeDetails[i].quantity, new { @class = "form-control", @style = "text-align: right; width: 100%;" })</td>
                                                       
                                                            @Html.HiddenFor(x => Model.RecipeDetails[i].recipe_id)
                                                            @Html.HiddenFor(model => model.RecipeDetail.recipe_detail_id)
                                                            <td style="text-align: center;">
                                                                <button type="submit" id="btndeleteGD" class="btn btn-danger btn-sm custom-toggle" name="btndeleteGD" value="@(i)"><i class="ri-close-line"></i></button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </table>
                                            <div class="row">
                                                <div class="col-md-8">
                                                    <button type="submit" id="btnAdd" class="btn btn-primary addMembers-modal" style="padding: 2px 10px 2px 10px; margin-top: 30px;" name="btnAdd" value="Add" onclick="javascript: return RowValidation();"><div style="float: left; padding: 0 5px 0 0;"><i class="bx bx-plus"></i></div>Add</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12 text-end">
                                        @Html.Label(" ", new { @id = "lblrowcount", @style = "display:none; color: red;" })
                                        <button type="submit" id="btnAdd" name="btnAdd" value="Save" class="save-btn-normal"><i class="ri-save-line"></i>Save</button>
                                        <button type="button" class="cancel-btn-normal" title="Cancel" id="btnSave" onclick="Refresh();"><i class="ri-close-fill"></i>Cancel</button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-sm-6">
                                <h5 class="card-title mb-0 page-heading-color">Recipe Master</h5>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        @{
                            SrNo = 0;
                        }
                        <div class="row">
                            <div class="col-sm-12">
                                <table id="RecipeMaster" class="table table-bordered dt-responsive nowrap table-striped align-middle app-tbl-one" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th style="text-align:center">Sr No</th>
                                            <th>@Html.DisplayNameFor(model => model.RecipeHeader.recipe_no)</th>
                                            <th>@Html.DisplayNameFor(model => model.RecipeHeader.recipe_name)</th>
                                            <th>@Html.DisplayName("Customer Name")</th>
                                            <th style="text-align:center">Action</th>
                                        </tr>
                                    </thead>

                                    @foreach (var item in Model.RecipeHeaderList)
                                    {
                                        SrNo = SrNo + 1;
                                        <tr>
                                            <td style="color: darkgray; text-align:center">@SrNo</td>
                                            <td><a href="#!">@Html.DisplayFor(modelItem => item.recipe_no)</a></td>
                                            <td style="color: darkgray;"><div style="width: 250px; overflow: hidden; text-overflow: ellipsis;">@Html.DisplayFor(modelItem => item.recipe_name)</div></td>
                                            <td style="color: darkgray;"><div style="width: 250px; overflow: hidden; text-overflow: ellipsis;">@Html.DisplayFor(modelItem => item.party_name)</div></td>
                                            <td style="text-align: center;">
                                                <div class="dropdown d-inline-block">
                                                    <button class="btn btn-soft-secondary btn-sm dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                        <i class="ri-more-fill align-middle"></i>
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-end mybtn2-form">
                                                        <li><a href="@Url.Action("Details", "RecipeMaster", new { id = item.recipe_id })" class="btn btn-info custom-toggle active"><i class="ri-eye-fill align-bottom"></i> View</a></li>
                                                        <li><a href="@Url.Action("Edit", "RecipeMaster", new { id = item.recipe_id })" class="btn btn-secondary custom-toggle"><i class="ri-pencil-fill align-bottom"></i> Edit</a></li>
                                                        <li><a class="btn btn-danger custom-toggle" onclick="ConfirmDelete();"><i class="ri-delete-bin-fill"></i> Delete</a></li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (ViewBag.Message != null)
{
    <script>
        window.onload = function () {

            Swal.fire({
                title: "<span style='color: #3085d6;'>@Html.Raw(ViewBag.Message)</span>",
                icon: "success",
                iconColor:"#04AA6D",
                confirmButtonClass: "w-xs me-2 mt-2",
                confirmButtonColor: "#3085d6",

            }).then((result) => {
                if (result.value) {
                    window.location.href = "@Url.Action("Create", "RecipeMaster")";
                }
            });
        } ;
    </script>
}

@if (TempData["ErrorMsg"] != null)
{
    <script>
        window.onload = function () {
            Swal.fire({
                text: "@TempData["ErrorMsg"]",
                icon: "warning",
                confirmButtonClass: "btn btn-primary w-xs me-2 mt-2",
            })
        };
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        document.addEventListener("DOMContentLoaded",
            function () { new DataTable("#RecipeMaster", { scrollX: !0, sort: !0  }) })
    </script>

    <script>
        function Refresh() {
          window.location.href = "@Url.Action("Create", "RecipeMaster")";
        }
    </script>

    <script>
       function Validation() {
           if (@SrNo == 0) {
           document.getElementById('lblrowcount').innerHTML = "Atleast one row is required!";
           document.getElementById('lblrowcount').style.display = "block";
            return false;
          }
          else {
          return true;
       }
    }
    </script>



    <script type="text/javascript">
        function RowValidation() {
            var rowCount = $("#RecipeDetails tr").length;
            var i = 0;
            var foundDuplicate = false;

            if (rowCount > 2) {
                $("#RecipeDetails tr").each(function () {
                    var currentValue = $("#RecipeDetails_" + i + "__material_id").val();

                    var j = 0;
                    $("#RecipeDetails tr").each(function () {
                        if (i != j && foundDuplicate == false) {
                            var NewValue = $("#RecipeDetails_" + j + "__material_id").val();
                            if (NewValue == currentValue) {
                                alert("Duplicate Record found!");
                                foundDuplicate = true;
                                return false;
                            }
                        }
                        j++;
                    })
                    i++;
                });
            }
            else {
                foundDuplicate = false;
            }
            return !foundDuplicate;
        }
    </script>


    <script>
        function RecipeName(val) {           
            $("#RecipeDetails tr").each(function () {              
                var selectedText = $("#RecipeDetails_" + val.toString() + "__material_id").find("option:selected").text();
                var selectedValue = $("#RecipeDetails_" + val.toString() + "__material_id").val();

                var Parameter = {
                    id: selectedValue,
                    name: selectedText
                };

                $.ajax({
                    type: "POST",
                    url: "/RecipeMaster/RecipeName",
                    data: JSON.stringify(Parameter),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {                     
                        $("#RecipeDetails_" + val.toString() + "__material_recipe_name").val(data.msg);
                    },
                    error: function () {
                        alert("Error occured!!")
                    }
                });
            });
        }
    </script>


    <script>
        $(document).ready(function () {
            $('#RecipeHeader_recipe_name').on('input', function () {
                var enteredText = $(this).val();
                var uppercaseText = enteredText.toUpperCase();
                $(this).val(uppercaseText);
            });
        });
    </script>

}


